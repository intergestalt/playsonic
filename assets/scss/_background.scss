#background {
	position: absolute;
	top:0;
	left:0;
	z-index:2;
	width: 100%;
	overflow:hidden;
	pointer-events: none;

	svg {
		width: 100%;
		height: auto;
		display: block;
		path {
			opacity: 0; // all patterns start with 0 opacity before assembly
		}
	}

	/* transition for animated paths */

	.pattern-start svg path {
		pointer-events: all;
		transition: fill 0.5s linear;
		&:not(:hover) {
			fill: #000;	
		}
		&:not(:hover) { // after move away of mouseover
			transition: fill 30s linear, opacity 0.25s linear;
		}
	}

	/* transition for non-animated paths */

	.pattern-team svg path {
		pointer-events: all;
		transition: fill 0.5s linear;
		&:hover {
			fill: #000;	
		}
		&:not(:hover) {
			transition: fill 30s linear, opacity 0.25s linear;
		}
	}

	/* basic pattern visibililty, positioning, events */
	
	.pattern {
		margin-top: -13vw; 
		position: absolute;
		width: 100%;
		top:0;
		opacity: 1;
		&:not(.active-pattern) {
			display: none; // turning off pointer events doesn't seem to work - display none makes sure no events get received
			opacity: 0;
			svg path {
				pointer-events: none;
			}
		}
	}

}

/* Nasenoperation */

/* set up here */

/* remove when pattern repeats */
$patterns-repeated: (
  start: 7 8,
  public: 19 20,
  chamber: 19 20,
  ensemble: 31 32,
  solo: 10 11
);

/* remove on mobile view */
$patterns-mobile-delete-paths: (
  start: 3 6 9 10 11 13 14 15 19 22,
  public: 2 4 5 6 8 9 12 15 11 14,
  chamber: 15 18 9 12 7 4 3 5 6 10 11 23 26 8,
  ensemble: 26 21 23 18 22 25 17 20 3 2 5 6 15 12 7 10 13 8 16 11,
  solo: 6 9 23 24 20 3 21 22 14 17 
);

/* remove on mobile view when pattern repeats*/
$patterns-mobile-delete-paths-repeated: (
  start: 23 24,
  public: 23 24,
  chamber: 27 28,
  ensemble: 37 38,
  solo: 18 19,
);

/* execute */

#background { 

	@each $label,$paths in $patterns-repeated {
		@each $i in $paths {
			.pattern-#{$label} svg + svg path:nth-child(#{$i}) {
				display: none; 
			}
		}
	} 

	@media screen and (max-width: $breakpoint) {

		@each $label,$paths in $patterns-mobile-delete-paths {
			@each $i in $paths {
				.pattern-#{$label} svg path:nth-child(#{$i}) {
					display: none; 
				}
			}
		} 

		@each $label,$paths in $patterns-mobile-delete-paths-repeated {
			@each $i in $paths {
				.pattern-#{$label} svg + svg path:nth-child(#{$i}) {
					display: none; 
				}
			}
		} 
	}

	// Helper: uncomment to see the number of the path in stroke-width
	/*
	.pattern {
		&:not(.active-pattern) {
			display: none;
		}
		path {
			pointer-events: all;
		}
		svg path {
			@for $i from 1 through 50 {
			    &:nth-child(#{$i}) {
			    	stroke: red;
			        stroke-width:#{$i};
			        position:absolute;
			        color: red;
			    }
			}
		}
	}
	*/
}