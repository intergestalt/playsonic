#main {
	width: 33%;
	margin-left: auto;
	margin-right: auto;
	padding-top: 18.2vw;
}

#background {
	position: absolute;
	top:0;
	left:0;
	z-index:2;
	width: 100%;
	overflow:hidden;
	pointer-events: none;

	svg {
		width: 100%;
		height: auto;
		display: block;
		path {
			opacity: 0; // all patterns start with 0 opacity before assembly
		}
	}

	/* transition for animated paths */

	.pattern-start svg path {
		pointer-events: all;
		transition: fill 0.5s linear;
		&:not(:hover) {
			fill: #000;	
		}
		&:not(:hover) { // after move away of mouseover
			transition: fill 30s linear, opacity 0.25s linear;
		}
	}

	/* transition for non-animated paths */

	.pattern-team svg path {
		pointer-events: all;
		transition: fill 0.5s linear;
		&:hover {
			fill: #000;	
		}
		&:not(:hover) {
			transition: fill 30s linear, opacity 0.25s linear;
		}
	}

	/* basic pattern visibililty, positioning, events */
	
	.pattern {
		margin-top: -13vw; 
		position: absolute;
		width: 100%;
		top:0;
		opacity: 1;
		&:not(.active-pattern) {
			display: none; // turning off pointer events doesn't seem to work - display none makes sure no events get received
			opacity: 0;
			svg path {
				pointer-events: none;
			}
		}
	}

}

/* Nasenoperation */

#background { 
	.pattern-start {
		svg + svg path { 
			&:nth-child(7),
			&:nth-child(8) {
				display: none; 
			}
		}
	}

	.pattern-ensemble {
		svg + svg path { 
			&:nth-child(31),
			&:nth-child(32) {
				display: none;
			}
		}
	}	


	.pattern-public {
		svg + svg path { 
			&:nth-child(19),
			&:nth-child(20) {
				display: none;
			}
		}
	}

	.pattern-chamber {
		svg + svg path { 
			&:nth-child(19),
			&:nth-child(20) {
				display: none;
			}
		}
	}

	.pattern-solo {
		svg + svg path { 
			&:nth-child(10),
			&:nth-child(11) {
				display: none;
			}
		}
	}

	// Helper: uncomment to see the number of the path in stroke-width
	/*
	.pattern {
		&:not(.active-pattern) {
			display: none;
		}
		path {
			pointer-events: all;
		}
		svg path {
			@for $i from 1 through 50 {
			    &:nth-child(#{$i}) {
			    	stroke: red;
			        stroke-width:#{$i};
			        position:absolute;
			        color: red;
			    }
			}
		}
	}
	*/
}